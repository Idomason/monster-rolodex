{"version":3,"sources":["components/card/Card.js","components/card-list/CardList.js","components/search-box/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","src","concat","monster","id","alt","name","email","CardList","monsters","map","Card_Card","key","SearchBox","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","searchField","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredMonsters","filter","toLowerCase","includes","SearchBox_SearchBox","CardList_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"wTAGaA,eAAO,SAACC,GAAD,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAG,wBAAAC,OAA0BN,EAAMO,QAAQC,GAAxC,0BAAoEC,IAAI,YAChFR,EAAAC,EAAAC,cAAA,UAAKH,EAAMO,QAAQG,MACnBT,EAAAC,EAAAC,cAAA,SAAIH,EAAMO,QAAQI,UCHbC,SAAW,SAACZ,GACrB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVJ,EAAMa,SAASC,IAAI,SAACP,GAAD,OAChBN,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKT,EAAQC,GAAID,QAASA,SCLnCU,SAAY,SAACjB,GAAU,IACxBkB,EAA8BlB,EAA9BkB,YAAaC,EAAiBnB,EAAjBmB,aACrB,OACIlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACIC,UAAU,SACVgB,KAAK,SACLF,YAAaA,EACbG,SAAUF,OC+BXG,cAnCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAcFP,aAAe,SAACW,GACdP,EAAKQ,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAbzCX,EAAKY,MAAQ,CACXtB,SAAU,GACVmB,YAAa,IALHT,mFASM,IAAAa,EAAAV,KAClBW,MAAM,8CACHC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GAAD,OAAWL,EAAKL,SAAS,CAAElB,SAAU4B,uCAOtC,IAAAC,EAC2BhB,KAAKS,MAA/BtB,EADD6B,EACC7B,SAAUmB,EADXU,EACWV,YACZW,EAAmB9B,EAAS+B,OAAO,SAAArC,GAAO,OAAIA,EAAQG,KAAKmC,cAAcC,SAASd,EAAYa,iBAEpG,OACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAC4C,EAAD,CACE7B,YAAY,kBACZC,aAAcO,KAAKP,eAErBlB,EAAAC,EAAAC,cAAC6C,EAAD,CAAUnC,SAAU8B,YA/BVM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAhB,KAAAe,EAAAE,KAAA,UAAqBjB,KAAK,SAAAkB,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACP9D,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,WAAP,KACE/D,EAAAC,EAAAC,cAAC8D,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.39c91f88.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Card.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"Monster\" />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport { Card } from \"../card/Card\";\r\nimport './CardList.css';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map((monster) => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './SeachBox.css'\r\n\r\nexport const SearchBox = (props) => {\r\n    const { placeholder, handleChange } = props\r\n    return (\r\n        <div>\r\n            <input \r\n                className='search'\r\n                type='search' \r\n                placeholder={placeholder}\r\n                onChange={handleChange} \r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\nimport './App.css'\nimport { CardList } from './components/card-list/CardList'\nimport { SearchBox } from './components/search-box/SearchBox'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }))\n  }\n\n  handleChange = (event) => {\n    this.setState({searchField: event.target.value})\n  }\n\n  render() {\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className='App'>\n        <h1>Monster Rolodex</h1>\n        <SearchBox \n          placeholder='Search Monsters' \n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}